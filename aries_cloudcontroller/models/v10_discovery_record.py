# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from aries_cloudcontroller.models.v10_discovery_record_disclose import V10DiscoveryRecordDisclose
from aries_cloudcontroller.models.v10_discovery_record_query_msg import V10DiscoveryRecordQueryMsg


class V10DiscoveryRecord(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    V10DiscoveryRecord - a model defined in OpenAPI

        connection_id: The connection_id of this V10DiscoveryRecord [Optional].
        created_at: The created_at of this V10DiscoveryRecord [Optional].
        disclose: The disclose of this V10DiscoveryRecord [Optional].
        discovery_exchange_id: The discovery_exchange_id of this V10DiscoveryRecord [Optional].
        query_msg: The query_msg of this V10DiscoveryRecord [Optional].
        state: The state of this V10DiscoveryRecord [Optional].
        thread_id: The thread_id of this V10DiscoveryRecord [Optional].
        trace: The trace of this V10DiscoveryRecord [Optional].
        updated_at: The updated_at of this V10DiscoveryRecord [Optional].
    """

    connection_id: Optional[str] = Field(alias="connection_id", default=None)
    created_at: Optional[str] = Field(alias="created_at", default=None)
    disclose: Optional[V10DiscoveryRecordDisclose] = Field(alias="disclose", default=None)
    discovery_exchange_id: Optional[str] = Field(alias="discovery_exchange_id", default=None)
    query_msg: Optional[V10DiscoveryRecordQueryMsg] = Field(alias="query_msg", default=None)
    state: Optional[str] = Field(alias="state", default=None)
    thread_id: Optional[str] = Field(alias="thread_id", default=None)
    trace: Optional[bool] = Field(alias="trace", default=None)
    updated_at: Optional[str] = Field(alias="updated_at", default=None)

    @validator("created_at")
    def created_at_pattern(cls, value):
        assert value is not None and re.match(r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$", value)
        return value

    @validator("updated_at")
    def updated_at_pattern(cls, value):
        assert value is not None and re.match(r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$", value)
        return value

V10DiscoveryRecord.update_forward_refs()
