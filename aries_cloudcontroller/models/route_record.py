# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class RouteRecord(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    RouteRecord - a model defined in OpenAPI

        connection_id: The connection_id of this RouteRecord [Optional].
        created_at: The created_at of this RouteRecord [Optional].
        recipient_key: The recipient_key of this RouteRecord.
        record_id: The record_id of this RouteRecord [Optional].
        role: The role of this RouteRecord [Optional].
        state: The state of this RouteRecord [Optional].
        updated_at: The updated_at of this RouteRecord [Optional].
        wallet_id: The wallet_id of this RouteRecord [Optional].
    """

    connection_id: Optional[str] = Field(alias="connection_id", default=None)
    created_at: Optional[str] = Field(alias="created_at", default=None)
    recipient_key: str = Field(alias="recipient_key")
    record_id: Optional[str] = Field(alias="record_id", default=None)
    role: Optional[str] = Field(alias="role", default=None)
    state: Optional[str] = Field(alias="state", default=None)
    updated_at: Optional[str] = Field(alias="updated_at", default=None)
    wallet_id: Optional[str] = Field(alias="wallet_id", default=None)

    @validator("created_at")
    def created_at_pattern(cls, value):
        assert value is not None and re.match(r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$", value)
        return value

    @validator("updated_at")
    def updated_at_pattern(cls, value):
        assert value is not None and re.match(r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$", value)
        return value

RouteRecord.update_forward_refs()
