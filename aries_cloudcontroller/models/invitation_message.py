# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from aries_cloudcontroller.models.attach_decorator import AttachDecorator


class InvitationMessage(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    InvitationMessage - a model defined in OpenAPI

        id: The id of this InvitationMessage [Optional].
        type: The type of this InvitationMessage [Optional].
        accept: The accept of this InvitationMessage [Optional].
        handshake_protocols: The handshake_protocols of this InvitationMessage [Optional].
        image_url: The image_url of this InvitationMessage [Optional].
        label: The label of this InvitationMessage [Optional].
        requestsattach: The requestsattach of this InvitationMessage [Optional].
        services: The services of this InvitationMessage [Optional].
    """

    id: Optional[str] = Field(alias="@id", default=None)
    type: Optional[str] = Field(alias="@type", default=None)
    accept: Optional[List[str]] = Field(alias="accept", default=None)
    handshake_protocols: Optional[List[str]] = Field(alias="handshake_protocols", default=None)
    image_url: Optional[str] = Field(alias="imageUrl", default=None)
    label: Optional[str] = Field(alias="label", default=None)
    requestsattach: Optional[List[AttachDecorator]] = Field(alias="requests~attach", default=None)
    services: Optional[List[object]] = Field(alias="services", default=None)

InvitationMessage.update_forward_refs()
