# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from aries_cloudcontroller.models.attach_decorator_data1_jws import AttachDecoratorData1JWS
from aries_cloudcontroller.models.attach_decorator_data_jws_header import AttachDecoratorDataJWSHeader


class AttachDecoratorDataJws(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AttachDecoratorDataJws - a model defined in OpenAPI

        header: The header of this AttachDecoratorDataJws [Optional].
        protected: The protected of this AttachDecoratorDataJws [Optional].
        signature: The signature of this AttachDecoratorDataJws [Optional].
        signatures: The signatures of this AttachDecoratorDataJws [Optional].
    """

    header: Optional[AttachDecoratorDataJWSHeader] = Field(alias="header", default=None)
    protected: Optional[str] = Field(alias="protected", default=None)
    signature: Optional[str] = Field(alias="signature", default=None)
    signatures: Optional[List[AttachDecoratorData1JWS]] = Field(alias="signatures", default=None)

    @validator("protected")
    def protected_pattern(cls, value):
        assert value is not None and re.match(r"^[-_a-zA-Z0-9]*$", value)
        return value

    @validator("signature")
    def signature_pattern(cls, value):
        assert value is not None and re.match(r"^[-_a-zA-Z0-9]*$", value)
        return value

AttachDecoratorDataJws.update_forward_refs()
