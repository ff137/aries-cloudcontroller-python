# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from aries_cloudcontroller.models.attach_decorator_data import AttachDecoratorData


class DIDXRequestDidDocAttach(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    DIDXRequestDidDocAttach - a model defined in OpenAPI

        id: The id of this DIDXRequestDidDocAttach [Optional].
        byte_count: The byte_count of this DIDXRequestDidDocAttach [Optional].
        data: The data of this DIDXRequestDidDocAttach.
        description: The description of this DIDXRequestDidDocAttach [Optional].
        filename: The filename of this DIDXRequestDidDocAttach [Optional].
        lastmod_time: The lastmod_time of this DIDXRequestDidDocAttach [Optional].
        mime_type: The mime_type of this DIDXRequestDidDocAttach [Optional].
    """

    id: Optional[str] = Field(alias="@id", default=None)
    byte_count: Optional[int] = Field(alias="byte_count", default=None)
    data: AttachDecoratorData = Field(alias="data")
    description: Optional[str] = Field(alias="description", default=None)
    filename: Optional[str] = Field(alias="filename", default=None)
    lastmod_time: Optional[str] = Field(alias="lastmod_time", default=None)
    mime_type: Optional[str] = Field(alias="mime-type", default=None)

    @validator("lastmod_time")
    def lastmod_time_pattern(cls, value):
        assert value is not None and re.match(r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$", value)
        return value

DIDXRequestDidDocAttach.update_forward_refs()
